var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
  _parcelHelpers.defineInteropFlag(exports);
  var _react = require('react');
  var _reactDefault = _parcelHelpers.interopDefault(_react);
  const Responsibilities = ({responsibilities}) => {
    if (!responsibilities) {
      return null;
    }
    return (
      /*#__PURE__*/_reactDefault.default.createElement("ul", {
        className: "list-disc"
      }, responsibilities.map((responsibility, index) => /*#__PURE__*/_reactDefault.default.createElement("li", {
        className: "text-white",
        key: index
      }, responsibility)))
    );
  };
  _c = Responsibilities;
  const ExperienceItem = ({type, details}) => {
      const {position, company, period, responsibilities, course, school, description} = details;
      return (
        /*#__PURE__*/_reactDefault.default.createElement("div", {
          className: "experience-item"
        }, /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "experience-item-arrow"
        }), /*#__PURE__*/_reactDefault.default.createElement("h4", null, type == 'education' ? course : position), /*#__PURE__*/_reactDefault.default.createElement("span", {
          className: "experience-item-details"
        }, type == 'education' ? school : company, " / ", period), /*#__PURE__*/_reactDefault.default.createElement(Responsibilities, {
          responsibilities: responsibilities
        }), description && /*#__PURE__*/_reactDefault.default.createElement("p", null, description))
      );
    };
  _c2 = ExperienceItem;
  exports.default = ExperienceItem;
  var _c, _c2;
  $RefreshReg$(_c, "Responsibilities");
  $RefreshReg$(_c2, "ExperienceItem");
  helpers.postlude(module);
} finally {
      window.$RefreshReg$ = prevRefreshReg;
      window.$RefreshSig$ = prevRefreshSig;
    }
